name: publish template to nuget

on: [push]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

jobs:
  publish:
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: publish
        run: dotnet pack --configuration Release  --output ${{ env.NuGetDirectory }}

      # Publish the NuGet package as an artifact, so they can be used in the following jobs
      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3.4.0

      - name: Set environment variables
        env:
         JF_URL: ${{ secrets.JFROG_URL }}
         JF_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
        run: echo "${{env.working-directory}}"

      - name: Publish to jfrog
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{secrets.JFROG_EMAIL}}":"${{ secrets.JFROG_ACCESS_TOKEN }}" --source https://devnero.jfrog.io/artifactory/api/nuget/jfrog-class-library-nuget-local --skip-duplicate
          }